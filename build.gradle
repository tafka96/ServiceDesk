plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "2.2.4"
}

group = 'com.service.desk'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.hibernate.validator:hibernate-validator'
	implementation 'org.hibernate.validator:hibernate-validator-annotation-processor'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed"
	}
	useJUnitPlatform()

}

task copyWebApp(type: Copy) {
	from 'webapp/build'
	into 'build/resources/main/static/.'
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/webapp")
	args = ["install"]
}
task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/webapp")
	args = ["run", "build"]
}


appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
bootRun.dependsOn copyWebApp

node {
	download = true
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir = file("${project.buildDir}/npm")
}